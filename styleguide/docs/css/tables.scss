/*doc
---
title: Tables
name: table
categories:
 - css_components_tables
 - css_all
---

<code class="pam">
<img src="/styleguide/download.svg" width="16" height="16"/>
npm install pui-css-tables --save
</code>

Class                   | Description
------------------------| -----------------
`.table`                | Applied to the starting element to define the style standards.
`.tr-hover`             | Applied to the starting table element or the desired row to add the hover effect.
`.td-hover`             | Applied to the starting .table element to change the table row hover effect to a table cell hover.
`.tr-no-h-borders`      | Removes inner horizontal borders from the desired .table or table row element.
`.table-no-ext-borders` | Removes external borders for the entire table when applied to the .table element.
`.table-no-borders`     | Removes all borders, internal and external, when applied to the .table element.Removes all borders, internal and external, when applied to the .table element.

*/

/*doc
---
title: HTML Tables
name: 0_html_tables
parent: table
---
Basic HTML tables are good for traditional data sets with minimal user interaction.
Both Flex Tables and HTML tables have the same aesthetic styling and similar modifier classes.
*/

/*doc
---
title: Basic Data Table
name: 0_basic_data_table
parent: 0_html_tables
---
This table is used to display many rows of data.

```html_example
<table class="table">
  <tbody>
    <tr>
      <th> Header 1 </th>
      <th> Header 2 </th>
      <th> Header 3 </th>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
  </tbody>
</table>
```
*/

/*doc
---
title: Table Row Hover
name: 1_table_row_hover
parent: 0_html_tables
---

Adding .tr-hover to a specific table row or the table element itself will add the hover effect.

```html_example
<table class="table">
  <tbody>
    <tr>
      <th> Header 1 </th>
      <th> Header 2 </th>
      <th> Header 3 </th>
    </tr>
    <tr class="tr-hover">
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
  </tbody>
</table>
```
*/

/*doc
---
title: Table Cell Hover
name: 2_table_cell_hover
parent: 0_html_tables
---

Adding .td-hover to the table element will allow the user to highlight individual cells.

```html_example
<table class="table td-hover">
  <tbody>
    <tr>
      <th> Header 1 </th>
      <th> Header 2 </th>
      <th> Header 3 </th>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
  </tbody>
</table>
```
*/

/*doc
---
title: Table Border Modifiers
name: 3_table_border_modifiers
parent: 0_html_tables
---

Remove all of the internal horizontal borders with class .tr-no-h-borders applied to the table row or the table element.

```html_example
<table class="table tr-no-h-borders">
  <tbody>
    <tr>
      <th> Header 1 </th>
      <th> Header 2 </th>
      <th> Header 3 </th>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
  </tbody>
</table>
```

No external borders to rows using class .table-no-ext-borders on the table element.

```html_example
<table class="table table-no-ext-borders">
  <tbody>
    <tr>
      <th> Header 1 </th>
      <th> Header 2 </th>
      <th> Header 3 </th>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
  </tbody>
</table>
```

No external borders to rows using class .table-no-borders on the table element.

```html_example
<table class="table table-no-borders">
  <tbody>
    <tr>
      <th> Header 1 </th>
      <th> Header 2 </th>
      <th> Header 3 </th>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
    <tr>
      <td> Cell 1 </td>
      <td> Cell 2 </td>
      <td> Cell 3 </td>
    </tr>
  </tbody>
</table>
```
*/

/*doc
---
title: Scrollable
name: 4_scrollable_html_table
parent: 0_html_tables
---

Table with external borders where the body scrolls but the header does not. The default height of the
scrollable table is 164px. Modify the max-height of the .table-scrollable element to change this for your layout.

```html_example
<table class="table mbn">
  <tbody>
    <tr>
      <th> Header 1 </th>
      <th> Header 2 </th>
      <th> Header 3 </th>
    </tr>
  </tbody>
</table>
<div class="table-scrollable">
  <table class="table tr-hover">
    <tbody>
      <tr>
        <td> Cell 1 </td>
        <td> Cell 2 </td>
        <td> Cell 3 </td>
      </tr>
      <tr>
        <td> Cell 1 </td>
        <td> Cell 2 </td>
        <td> Cell 3 </td>
      </tr>
      <tr>
        <td> Cell 1 </td>
        <td> Cell 2 </td>
        <td> Cell 3 </td>
      </tr>
      <tr>
        <td> Cell 1 </td>
        <td> Cell 2 </td>
        <td> Cell 3 </td>
      </tr>
      <tr>
        <td> Cell 1 </td>
        <td> Cell 2 </td>
        <td> Cell 3 </td>
      </tr>
      <tr>
        <td> Cell 1 </td>
        <td> Cell 2 </td>
        <td> Cell 3 </td>
      </tr>
    </tbody>
  </table>
</div>
```
*/

/*doc
---
title: Flex Tables
name: 1_flex_tables
parent: table
---

Flex Tables have the same functionality as HTML tables but allow for more complex interactions like
links and dynamic column widths. They should be used when crafting intricate components or you are concerned
about responsive flexibility. Both Flex Tables and HTML tables have the same aesthetic styling and
similar modifier classes.

```html_example
<div class="table">
  <div class="tr grid">
    <div class="th col"> Header 1 </div>
    <div class="th col"> Header 2 </div>
    <div class="th col"> Header 3 </div>
  </div>
  <div class="tr grid">
    <div class="td col"> Cell 1 </div>
    <div class="td col"> Cell 2 </div>
    <div class="td col"> Cell 3 </div>
  </div>
  <div class="tr grid">
    <div class="td col"> Cell 1 </div>
    <div class="td col"> Cell 2 </div>
    <div class="td col"> Cell 3 </div>
  </div>
</div>
```

*/

/*doc
---
title: Table Cell Alignment
name: 0_table_cell_alignment
parent: 1_flex_tables
---

Thanks to the power of the flexbox grid you can take advantage of content alignment classes
like .col-top and .col-bottom to align the content of a column.

```html_example
<div class="table">
  <div class="tr grid">
    <div class="th col col-8"> Head </div>
    <div class="th col col-8"> Head </div>
    <div class="th col col-8"> Head </div>
  </div>
  <div class="tr grid">
    <div class="td col col-8">
      <div>Cell 1</div>
      <div>Cell 1.2</div>
    </div>
    <div class="td col col-8 col-top">
      <code>.col-top</code>
    </div>
    <div class="td col col-8 col-bottom">
      <code>.col-bottom</code>
    </div>
  </div>
</div>
```
*/

/*doc
---
title: Dynamic Cell Width
name: 1_dynamic_cell_width
parent: 1_flex_tables
---

The Flex table can take advantage of the dynamic column widths provided by the flexbox grid. You can use the
base .col class for auto widths, .col-1 to .col-24 to define a percentage width between 1/24, .col-fixed to
define a specific pixel count or just observe the width of it’s children, and finally the .col-grow-2 to
.col-grow-11 to define a flex-grow column. These can all be used in conjunction. Read more about them here to
learn their proper use.

Also note that placing a div with .type-ellipsis into any of these cells will truncate your text content.

```html_example
<div class="table">
  <div class="tr grid">
    <div class="th col col-fixed" style="width: 100px"> Fixed Width </div>
    <div class="th col col-6"> 25% Width </div>
    <div class="th col"> Auto Width </div>
    <div class="th col col-grow-2"> Double the Auto Width </div>
  </div>
  <div class="tr grid">
    <div class="td col col-fixed" style="width: 100px"> .col.col-fixed </div>
    <div class="td col col-6"> .col.col-6 </div>
    <div class="td col"> .col </div>
    <div class="td col col-grow-2"> .col-grow-2 </div>
  </div>
</div>
```
*/

/*doc
---
title: Table Linking
name: 2_table_linking
parent: 1_flex_tables
---

The flex table is able to swap out any of it’s divs for an a tag. In the example below we can see a single
cell can be made into a link or an entire row.

```html_example
<div class="table">
  <div class="tr grid">
    <div class="th col col-2"> Header 1 </div>
    <div class="th col col-2"> Header 2 </div>
    <div class="th col col-4"> Header 3 </div>
    <div class="th col col-8"> Header 4 </div>
    <div class="th col col-8"> Header 5 </div>
  </div>
  <div class="tr grid">
    <div class="td col col-2"> Cell 1 </div>
    <div class="td col col-2"> Cell 2 </div>
    <div class="td col col-4"> Cell 3 </div>
    <div class="td col col-8"> Cell 4 </div>
    <a class="td col col-8" href="#tables" title="Everyone Can Read It"> Cell 5 (a tag cell) </a>
  </div>
  <a class="tr grid" href="#tables" title="Everyone Can Read It">
    <div class="td col col-24"> Cell 1-5 (a tag row with div cell) </div>
  </a>
</div>
```
*/